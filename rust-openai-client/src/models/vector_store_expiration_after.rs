/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// VectorStoreExpirationAfter : The expiration policy for a vector store.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VectorStoreExpirationAfter {
    /// Anchor timestamp after which the expiration policy applies. Supported anchors: `last_active_at`.
    #[serde(rename = "anchor")]
    pub anchor: Anchor,
    /// The number of days after the anchor time that the vector store will expire.
    #[serde(rename = "days")]
    pub days: i32,
}

impl VectorStoreExpirationAfter {
    /// The expiration policy for a vector store.
    pub fn new(anchor: Anchor, days: i32) -> VectorStoreExpirationAfter {
        VectorStoreExpirationAfter {
            anchor,
            days,
        }
    }
}
/// Anchor timestamp after which the expiration policy applies. Supported anchors: `last_active_at`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Anchor {
    #[serde(rename = "last_active_at")]
    LastActiveAt,
}

impl Default for Anchor {
    fn default() -> Anchor {
        Self::LastActiveAt
    }
}

