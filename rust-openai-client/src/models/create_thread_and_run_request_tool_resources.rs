/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CreateThreadAndRunRequestToolResources : A set of resources that are used by the assistant's tools. The resources are specific to the type of tool. For example, the `code_interpreter` tool requires a list of file IDs, while the `file_search` tool requires a list of vector store IDs. 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateThreadAndRunRequestToolResources {
    #[serde(rename = "code_interpreter", skip_serializing_if = "Option::is_none")]
    pub code_interpreter: Option<Box<models::CreateAssistantRequestToolResourcesCodeInterpreter>>,
    #[serde(rename = "file_search", skip_serializing_if = "Option::is_none")]
    pub file_search: Option<Box<models::AssistantObjectToolResourcesFileSearch>>,
}

impl CreateThreadAndRunRequestToolResources {
    /// A set of resources that are used by the assistant's tools. The resources are specific to the type of tool. For example, the `code_interpreter` tool requires a list of file IDs, while the `file_search` tool requires a list of vector store IDs. 
    pub fn new() -> CreateThreadAndRunRequestToolResources {
        CreateThreadAndRunRequestToolResources {
            code_interpreter: None,
            file_search: None,
        }
    }
}

