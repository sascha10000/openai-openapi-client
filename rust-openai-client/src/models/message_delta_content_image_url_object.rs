/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MessageDeltaContentImageUrlObject : References an image URL in the content of a message.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MessageDeltaContentImageUrlObject {
    /// The index of the content part in the message.
    #[serde(rename = "index")]
    pub index: i32,
    /// Always `image_url`.
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "image_url", skip_serializing_if = "Option::is_none")]
    pub image_url: Option<Box<models::MessageDeltaContentImageUrlObjectImageUrl>>,
}

impl MessageDeltaContentImageUrlObject {
    /// References an image URL in the content of a message.
    pub fn new(index: i32, r#type: Type) -> MessageDeltaContentImageUrlObject {
        MessageDeltaContentImageUrlObject {
            index,
            r#type,
            image_url: None,
        }
    }
}
/// Always `image_url`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "image_url")]
    ImageUrl,
}

impl Default for Type {
    fn default() -> Type {
        Self::ImageUrl
    }
}

